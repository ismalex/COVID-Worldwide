{"version":3,"sources":["api/index.js","Components/Tabs/CustomTabs.js","Components/InfoCards/Cards.js","Components/SelectCountry/SelectCountry.js","Components/Countries/CountriesList.js","Components/MapInfo/MapInfo.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","fetchGlobalData","a","axios","get","data","active","cases","deaths","recovered","updated","todayCases","todayDeaths","todayRecovered","modifiedData","fetchCountriesData","fetchSortedCountriesData","countries","slice","AntTabs","withStyles","root","display","backgroundColor","borderRadius","minHeight","minWidth","flexGrow","margin","flexContainer","position","padding","zIndex","indicator","top","bottom","right","height","boxShadow","Tabs","AntTab","theme","textTransform","fontWeight","typography","fontWeightRegular","fontFamily","join","color","selected","props","Tab","disableRipple","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","Typography","CustomizedTabs","state","countriesInfo","handleChange","event","newValue","setState","dataFromApi","this","CircularProgress","size","onChange","aria-label","variant","label","Cards","cardInfo","style","maxHeight","overflow","Component","numberFormat","Intl","NumberFormat","Grid","item","component","Card","xs","CardContent","p","gutterBottom","start","end","duration","separator","m","border","borderColor","fontSize","format","Date","getMinutes","SelectCountry","CountriesList","SelectedCountryInfo","onChangeInput","selectedValue","width","marginRight","dataInfo","map","opt","country","formatOptionLabel","src","countryInfo","flag","alt","options","placeholder","classNamePrefix","autoFocus","isSearchable","isClearable","marginLeft","List","ListItem","disableGutters","Chip","container","direction","spacing","align","paddingLeft","Divider","viewPort","latitude","longitude","zoom","mapInfo","process","MapInfo","defineMarkerSize","numberOfCases","obj","opacity","console","log","mapboxApiAccessToken","mapStyle","key","lat","long","Tooltip","TransitionComponent","Fade","title","Fragment","App","md","lg","Link","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dfbdabc3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = 'https://disease.sh/v2';\r\n// API calls for all the information to be used on the App\r\n\r\n// General global information\r\nexport const fetchGlobalData = async () => {\r\n\ttry {\r\n\t\t// Object destructuring\r\n\t\t// const response = await axios.get(baseURL);\r\n\t\t//const { data } = response;\r\n\t\t// all above in one line\r\n\t\tconst {\r\n\t\t\tdata: { active, cases, deaths, recovered, updated, todayCases, todayDeaths, todayRecovered }\r\n\t\t} = await axios.get(`${baseURL}/all`);\r\n\t\tconst modifiedData = {\r\n\t\t\tactive,\r\n\t\t\tcases,\r\n\t\t\trecovered,\r\n\t\t\tdeaths,\r\n\t\t\tupdated,\r\n\t\t\ttodayCases,\r\n\t\t\ttodayDeaths,\r\n\t\t\ttodayRecovered\r\n\t\t};\r\n\r\n\t\t// return await axios.get(`${baseURL}/all`);\r\n\t\treturn modifiedData;\r\n\t} catch (exception) {}\r\n};\r\n\r\n//Axios and .then examples\r\n/* export const fetchCountryData = () =>{\r\n    axios\r\n        .get(`${baseURL}countries`)\r\n        .then((response) => {\r\n            const data = response;\r\n            return data;\r\n        })\r\n        .catch(err => { console.log(err)})\r\n} */\r\n\r\nexport const fetchCountriesData = async () => {\r\n\ttry {\r\n\t\t//\r\n\t\tconst { data } = await axios.get(`${baseURL}/countries`);\r\n\t\treturn data;\r\n\r\n\t} catch (exeption) {}\r\n};\r\n\r\n// get the top 15 positions from the array\r\nfunction getTopCountries(array) {\r\n\tconst size = 15;\r\n\tlet topItems = array.slice(0, size);\r\n\treturn topItems;\r\n}\r\n\r\n//Top countries information\r\nexport const fetchSortedCountriesData = async () => {\r\n\ttry {\r\n\t\t//https://disease.sh/v2/countries?yesterday=true&sort=cases&allowNull=false\r\n\t\t//const info =\r\n\t\tconst { data } = await axios.get(`${baseURL}/countries?yesterday=true&sort=cases&allowNull=false`);\r\n\t\tconst countries = getTopCountries(data);\r\n\t\treturn countries;\r\n\t} catch (exeption) {}\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Tabs, Tab, Typography, Box, CircularProgress } from '@material-ui/core';\r\nimport { Cards, SelectCountry, CountriesList } from '../index';\r\nimport { fetchGlobalData } from '../../api';\r\n\r\nconst AntTabs = withStyles({\r\n\troot: {\r\n\t\tdisplay: 'inline-grid',\r\n\t\tbackgroundColor: '#eee',\r\n\t\tborderRadius: 10,\r\n\t\tminHeight: 10,\r\n\t\tminWidth: '100%',\r\n\t\tflexGrow: 1,\r\n\t\tmargin: '15px 0'\r\n\t},\r\n\tflexContainer: {\r\n\t\tposition: 'relative',\r\n\t\tpadding: '0 2px',\r\n\t\tzIndex: 1\r\n\t},\r\n\tindicator: {\r\n\t\ttop: 3,\r\n\t\tbottom: 3,\r\n\t\tright: 0,\r\n\t\theight: 'auto',\r\n\t\tborderRadius: 8,\r\n\t\tbackgroundColor: '#fff',\r\n\t\tboxShadow: '0 4px 12px 0 rgba(0,0,0,0.16)'\r\n\t}\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n\troot: {\r\n\t\ttextTransform: 'none',\r\n\t\tminHeight: 10,\r\n\t\tminWidth: 10,\r\n\t\tfontWeight: theme.typography.fontWeightRegular,\r\n\t\t/*marginRight: theme.spacing(0), */\r\n\t\tfontFamily: [\r\n\t\t\t'-apple-system',\r\n\t\t\t'BlinkMacSystemFont',\r\n\t\t\t'\"Segoe UI\"',\r\n\t\t\t'Roboto',\r\n\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t'Arial',\r\n\t\t\t'sans-serif',\r\n\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t'\"Segoe UI Symbol\"'\r\n\t\t].join(','),\r\n\t\t'&:hover': {\r\n\t\t\t/* color: '#40a9ff', */\r\n\t\t\tfontWeight: 600\r\n\t\t\t/* opacity: 1 */\r\n\t\t},\r\n\t\t'&$selected': {\r\n\t\t\tcolor: '##00000',\r\n\t\t\tfontWeight: 600\r\n\t\t},\r\n\t\t'&:focus': {\r\n\t\t\tcolor: '#00000'\r\n\t\t}\r\n\t},\r\n\tselected: {}\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nfunction TabPanel(props) {\r\n\tconst { children, value, index, ...other } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && (\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Typography>{children}</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class CustomizedTabs extends Component {\r\n\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t\tcountriesInfo: null\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst dataFromApi = await fetchGlobalData();\r\n\t\tthis.setState({ countriesInfo: dataFromApi });\r\n\t}\r\n\r\n\thandleChange = (event, newValue) => {\r\n\t\tthis.setState({ value: newValue });\r\n\t};\r\n\r\n\trender() {\r\n\r\n\t\tif (!this.state.countriesInfo) {\r\n\t\t\treturn <CircularProgress size={15} />;\r\n\t\t}\r\n\r\n\t\tconst { value, countriesInfo } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<AntTabs\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\taria-label=\"ant example\"\r\n\t\t\t\t\tposition=\"static\"\r\n\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<AntTab label=\"Global\" />\r\n\t\t\t\t\t<AntTab label=\"Countries\" />\r\n\t\t\t\t\t<AntTab label=\"Top Affected\" />\r\n\t\t\t\t</AntTabs>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<Cards cardInfo={countriesInfo} />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\t<SelectCountry />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={2} >\r\n\t\t\t\t\t<Box style={{maxHeight: 400, overflow: 'auto',}}>\r\n\t\t\t\t\t\t<CountriesList />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { Card, CardContent, Typography, Grid, Box } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\n\r\n/* const spanInfo = makeStyles({\r\n\tbox: { */\r\n\t/* \tborderRadius: 10,\r\n\t\tfontSize: '1rem',\r\n\t\tfontWeight: 700,\r\n\t\tmargin: 8,\r\n\t\tborder: 'solid 1px',\r\n\t\tpadding: 8 */\r\n\t\t/* borderColor: 'red', */\r\n\t\t/* color: 'red' */\r\n/* \t}\r\n}); */\r\n\r\n/* const MyButton = styled(Button)({\r\n\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n\tborder: 0,\r\n\tborderRadius: 3,\r\n\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n\tcolor: 'white',\r\n\theight: 48,\r\n\tpadding: '0 30px',\r\n  });\r\n  \r\n  export default function StyledComponents() {\r\n\treturn <MyButton>Styled Components</MyButton>;\r\n  }\r\n */\r\n\r\nexport default function Cards(props) {\r\n/* \tconst classes = spanInfo(); */\r\n\tconst numberFormat = new Intl.NumberFormat();\r\n\r\n\tif (!props.cardInfo) {\r\n\t\treturn null;\r\n\t\t/* return <CircularProgress size={15} />; */\r\n\t}\r\n\r\n\tconst { active, recovered, deaths, todayCases, todayDeaths, todayRecovered, updated } = props.cardInfo;\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Grid item component={Card} xs={12} /* variant=\"outlined\" */>\r\n\t\t\t\t<CardContent p={0}>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\tInfected\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t<CountUp start={0} end={active} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t{/* \t<Box component=\"span\" className={classes.root} color=\"error.main\" borderColor=\"error.main\">\r\n\t\t\t\t\t\t\t+{numberFormat.format(todayCases)} Today\r\n\t\t\t\t\t\t</Box> */}\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\tm={1}\r\n\t\t\t\t\t\t\tp={1}\r\n\t\t\t\t\t\t\tborder={1}\r\n\t\t\t\t\t\t\tcolor=\"error.main\"\r\n\t\t\t\t\t\t\tborderColor=\"error.main\"\r\n\t\t\t\t\t\t\tborderRadius={10}\r\n\t\t\t\t\t\t\tfontSize=\"subtitle1.fontSize\"\r\n\t\t\t\t\t\t\tfontWeight=\"fontWeightBold\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t+{numberFormat.format(todayCases)} Today\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\tNumber of Active Cases\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs component={Card} /* variant=\"outlined\" */>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\tRecovered\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t<CountUp start={0} end={recovered} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\tm={1}\r\n\t\t\t\t\t\t\tp={1}\r\n\t\t\t\t\t\t\tborder={1}\r\n\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\tborderColor=\"blue\"\r\n\t\t\t\t\t\t\tborderRadius={10}\r\n\t\t\t\t\t\t\tfontSize=\"subtitle1.fontSize\"\r\n\t\t\t\t\t\t\tfontWeight=\"fontWeightBold\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t+{numberFormat.format(todayRecovered)} Today\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" /* gutterBottom */>\r\n\t\t\t\t\t\tNumber of Recovered Cases\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs component={Card} /* variant=\"outlined\" */ >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\r\n\t\t\t\t\t\tDeaths\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\r\n\t\t\t\t\t\t<CountUp start={0} end={deaths} duration={2.5} separator=\",\" />\r\n\t\t\t\t\t\t<Box component=\"span\"\r\n\t\t\t\t\t\t\tm={1}\r\n\t\t\t\t\t\t\tp={1}\r\n\t\t\t\t\t\t\tborder={1}\r\n\t\t\t\t\t\t\tcolor=\"grey.500\"\r\n\t\t\t\t\t\t\tborderColor=\"grey.500\"\r\n\t\t\t\t\t\t\tborderRadius={10}\r\n\t\t\t\t\t\t\tfontSize=\"subtitle1.fontSize\"\r\n\t\t\t\t\t\t\tfontWeight=\"fontWeightBold\">\r\n\t\t\t\t\t\t\t+{numberFormat.format(todayDeaths)} Today\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" /* gutterBottom */>\r\n\t\t\t\t\t\tNumber of Deaths\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n\t\t\t\tUpdated {new Date(updated).getMinutes()} minutes ago.\r\n\t\t\t</Typography>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport Cards from '../InfoCards/Cards';\r\nimport { fetchCountriesData } from '../../api';\r\n\r\nexport default class SelectCountry extends Component {\r\n\tstate = {\r\n\t\tCountriesList: [],\r\n\t\tSelectedCountryInfo: null\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst dataFromApi = await fetchCountriesData();\r\n\t\tthis.setState({ CountriesList: dataFromApi });\r\n\t}\r\n\r\n\tonChangeInput = (selectedValue) => {\r\n\t\tif(selectedValue) {\r\n\t\t\tthis.setState({ SelectedCountryInfo: selectedValue.value });\r\n\t\t} \r\n\t\t /* console.log('selected', selectedValue.value) */\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { CountriesList } = this.state;\r\n\r\n\r\n\t\tconst style = {\r\n\t\t\twidth: '30px',\r\n\t\t\tmarginRight: '10px',\r\n\t\t/* \tdisplay: 'inline-block' */\r\n\t\t};\r\n\r\n\t\tconst dataInfo = CountriesList.map((opt) => ({ label: opt.country, value: opt }));\r\n\t\t/* console.log(dataInfo) */\r\n\r\n\t\tconst formatOptionLabel = ({ label, value }) => (\r\n\t\t\t<div style={{ display: 'flex' }}> {/* CHANGE STYLES TO CLASSES */}\r\n\t\t\t\t<img src={value.countryInfo.flag} style={style} alt=\"\" />\r\n\t\t\t\t{label}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tformatOptionLabel={formatOptionLabel}\r\n\t\t\t\t\tonChange={this.onChangeInput}\r\n\t\t\t\t\toptions={dataInfo}\r\n\t\t\t\t\tplaceholder=\"Select or search a country\"\r\n\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tisSearchable\r\n\t\t\t\t\tisClearable\r\n\t\t\t\t/>\r\n\t\t\t\t{/* <br /> */}\r\n\t\t\t\t<Cards cardInfo={this.state.SelectedCountryInfo} />\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Fragment, Component } from 'react';\r\nimport { Typography, Grid, List, ListItem, Divider, Chip, CircularProgress } from '@material-ui/core';\r\nimport { fetchSortedCountriesData } from '../../api';\r\n\r\nexport default class CountriesList extends Component {\r\n\tstate = {\r\n\t\tcountriesInfo: []\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst dataFromApi = await fetchSortedCountriesData();\r\n\t\tthis.setState({ countriesInfo: dataFromApi });\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.state.countriesInfo) {\r\n\t\t\treturn <CircularProgress size={15} />;\r\n\t\t\t/* return null; */\r\n\t\t}\r\n\r\n\t\tconst style = {\r\n\t\t\twidth: '15%',\r\n\t\t\tmarginRight: '5px',\r\n\t\t\tmarginLeft: '5px',\r\n\t\t\tborder: '0.5px solid #EBEBEB'\r\n\t\t};\r\n\r\n\t\tconst numberFormat = new Intl.NumberFormat();\r\n\t\t// \"1,234,567,890\"\r\n\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t{this.state.countriesInfo.map((country, index) => (\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItem disableGutters>\r\n\t\t\t\t\t\t\t\t<Chip variant=\"outlined\" size=\"small\" label={(index < 9 ? '0' : '') + (index + 1)} />\r\n\r\n\t\t\t\t\t\t\t\t<img alt=\"\" src={country.countryInfo.flag} style={style} />\r\n\t\t\t\t\t\t\t\t{country.country}\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"row\" /* alignItems=\"flex-end\" */ spacing={0}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle2\" \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tActive:\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle2\" \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tRecovered:{'  '}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle2\" \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDeath:\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"subtitle2\" \r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#000000', paddingLeft: '7px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{numberFormat.format(country.active)}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" variant=\"subtitle2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#000000', paddingLeft: '7px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{numberFormat.format(country.recovered)}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" variant=\"subtitle2\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: '#000000', paddingLeft: '7px' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{numberFormat.format(country.deaths)}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t{/*  { new Date(updated).toDateString() */}\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t))}\r\n\t\t\t\t{/* </Box> */}\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\nimport { CircularProgress, Tooltip, Typography, Fade } from '@material-ui/core';\r\nimport { fetchCountriesData } from '../../api';\r\n/* import Fade from '@material-ui/core/Fade'; */\r\n\r\nconst viewPort = {\r\n\twidth: '75vw',\r\n\theight: '96vh',\r\n\tlatitude: 15.7577,\r\n\tlongitude: 10.4376,\r\n\tzoom: 1.5\r\n};\r\n\r\n/* \tconst [viewport, setViewport] = useState({\r\n\t\t\t\twidth: '100vw',\r\n\t\t\t\theight: '95vh',\r\n\t\t\t\tlatitude: 12.7577,\r\n\t\t\t\tlongitude: 25.4376, \r\n\t\t\t\tzoom: 2,\r\n\t\t\t}\r\n\t\t);\r\n\t */\r\n\r\n/* CHANGE THIS? */\r\nconst mapInfo = {\r\n\tmapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\r\n\tmapStyle: 'mapbox://styles/mapbox/dark-v10'\r\n};\r\n\r\nexport default class MapInfo extends Component {\r\n\tstate = {\r\n\t\tcountriesInfo: []\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst dataFromApi = await fetchCountriesData();\r\n\t\tthis.setState({ countriesInfo: dataFromApi });\r\n\t\tconsole.log('map', this.state.countriesInfo)\r\n\t}\r\n\r\n\tdefineMarkerSize = (numberOfCases) => {\r\n\t\tlet obj = {};\r\n\r\n\t\tif (numberOfCases > 1000000) {\r\n\t\t\tobj = {\r\n\t\t\t\twidth: '120px',\r\n\t\t\t\theight: '120px',\r\n\t\t\t\topacity: 0.3\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (numberOfCases < 500000 && numberOfCases > 90000) {\r\n\t\t\tobj = {\r\n\t\t\t\twidth: '90px',\r\n\t\t\t\theight: '90px',\r\n\t\t\t\topacity: 0.3\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (numberOfCases < 90000 && numberOfCases > 10000) {\r\n\t\t\tobj = {\r\n\t\t\t\twidth: '50px',\r\n\t\t\t\theight: '50px',\r\n\t\t\t\topacity: 0.3\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (numberOfCases < 10000 && numberOfCases > 1000) {\r\n\t\t\tobj = {\r\n\t\t\t\twidth: '20px',\r\n\t\t\t\theight: '20px',\r\n\t\t\t\topacity: 0.3\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (numberOfCases < 1000) {\r\n\t\t\tobj = {\r\n\t\t\t\twidth: '10px',\r\n\t\t\t\theight: '10px',\r\n\t\t\t\topacity: 0.3\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn obj;\r\n\t\t/*console.log('Selected Value'); */\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst numberFormat = new Intl.NumberFormat();\r\n\r\n\t\tconst { countriesInfo } = this.state;\r\n\r\n\t\tif (!countriesInfo) {\r\n\t\t\treturn <CircularProgress size={15} />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ReactMapGL\r\n\t\t\t\t{...viewPort}\r\n\t\t\t\tmapboxApiAccessToken={mapInfo.mapboxApiAccessToken}\r\n\t\t\t\tmapStyle={mapInfo.mapStyle}\r\n\t\t\t\t/* \tonViewportChange = { (viewport) =>\t{ setViewport(viewport) } } */\r\n\t\t\t>\r\n\t\t\t\t{countriesInfo.map((country, index) => (\r\n\t\t\t\t\t<Marker key={index} latitude={country.countryInfo.lat + 7} longitude={country.countryInfo.long - 7}>\r\n\t\t\t\t\t\t{console.log(country)}\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\tTransitionComponent={Fade}\r\n\t\t\t\t\t\t\taria-label=\"add\"\r\n\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"inherit\">{country.country}</Typography>\r\n\t\t\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t Active cases: {numberFormat.format(country.active)} • Deaths: {country.deaths}{' '}\r\n\t\t\t\t\t\t\t\t\t\t• Recovered: {country.recovered}\r\n\t\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* <div> */}\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"./Red_Circle(small).svg\"\r\n\t\t\t\t\t\t\t\t\talt=\"a\"\r\n\t\t\t\t\t\t\t\t\tstyle={this.defineMarkerSize(country.active)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t))}\r\n\t\t\t</ReactMapGL>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport { Grid, Box, Typography, Link } from '@material-ui/core';\nimport LanguageTwoToneIcon from '@material-ui/icons/LanguageTwoTone';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { CustomTabs, MapInfo } from './Components';\n\nexport default class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={12} md={3} lg>\n\t\t\t\t\t<Box p={2}>\n\t\t\t\t\t\t<Typography variant=\"h2\" fontWeight=\"fontWeightBold\">\n\t\t\t\t\t\t\t<LanguageTwoToneIcon style={{ fontSize: 40 }} />\n\t\t\t\t\t\t\tCOVID-19 WorldWide\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Link href=\"http://github.com/ismalex\">\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}> \n\t\t\t\t\t\t\t\t<GitHubIcon style={{ fontSize: 20 }} />/ismalex\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<CustomTabs />\n\t\t\t\t\t</Box>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={9} lg={9} style={{ overflow: 'none',}}>\n\t\t\t\t\t<MapInfo />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}